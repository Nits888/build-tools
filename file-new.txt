import React, { useState, useEffect } from 'react';
import data from './data.json'; // Adjust the path as necessary
import EzyOptionSelector from './EzyOptionSelector';

export const NewIssue = () => {
  const [acSelection, setAcSelection] = useState('');
  const [sacSelection, setSacSelection] = useState('');
  const [ownerSelection, setOwnerSelection] = useState('');
  const [applicationSelection, setApplicationSelection] = useState('');

  const acOptions = Object.keys(data);
  const [sacOptions, setSacOptions] = useState<string[]>([]);
  const [ownerOptions, setOwnerOptions] = useState<string[]>([]);
  const [applicationOptions, setApplicationOptions] = useState<string[]>([]);

  useEffect(() => {
    if (acSelection) {
      setSacOptions(Object.keys(data[acSelection] || {}));
      setSacSelection('');
      setOwnerOptions([]);
      setOwnerSelection('');
      setApplicationOptions([]);
      setApplicationSelection('');
    } else {
      setSacOptions([]);
      setOwnerOptions([]);
      setOwnerSelection('');
      setApplicationOptions([]);
      setApplicationSelection('');
    }
  }, [acSelection]);

  useEffect(() => {
    if (acSelection && sacSelection) {
      const owners = [...new Set((data[acSelection][sacSelection] || []).map(item => item.Owner))];
      setOwnerOptions(owners);
      setOwnerSelection('');
      setApplicationOptions([]);
      setApplicationSelection('');
    } else {
      setOwnerOptions([]);
      setApplicationOptions([]);
      setApplicationSelection('');
    }
  }, [acSelection, sacSelection]);

  useEffect(() => {
    if (acSelection && sacSelection && ownerSelection) {
      const applications = [...new Set((data[acSelection][sacSelection] || [])
        .filter(item => item.Owner === ownerSelection)
        .map(item => item.Applications))];
      setApplicationOptions(applications);
      setApplicationSelection('');
    } else {
      setApplicationOptions([]);
    }
  }, [acSelection, sacSelection, ownerSelection]);

  const handleAcChange = (value: string) => {
    setAcSelection(value);
  };

  const handleSacChange = (value: string) => {
    setSacSelection(value);
  };

  const handleOwnerChange = (value: string) => {
    setOwnerSelection(value);
  };

  const handleApplicationChange = (value: string) => {
    setApplicationSelection(value);
  };

  const handleAddManualAc = (value: string) => {
    if (!acOptions.includes(value)) {
      acOptions.push(value);
    }
  };

  const handleAddManualSac = (value: string) => {
    if (!sacOptions.includes(value)) {
      setSacOptions(prev => [...prev, value]);
    }
  };

  const handleAddManualOwner = (value: string) => {
    if (!ownerOptions.includes(value)) {
      setOwnerOptions(prev => [...prev, value]);
    }
  };

  const handleAddManualApplication = (value: string) => {
    if (!applicationOptions.includes(value)) {
      setApplicationOptions(prev => [...prev, value]);
    }
  };

  const resetForm = () => {
    setAcSelection('');
    setSacOptions([]);
    setSacSelection('');
    setOwnerOptions([]);
    setOwnerSelection('');
    setApplicationOptions([]);
    setApplicationSelection('');
  };

  return (
    <div>
      <EzyOptionSelector
        options={acOptions}
        label="Asset Class"
        selected={acSelection}
        onSelect={handleAcChange}
        onAddManual={handleAddManualAc}
      />

      <EzyOptionSelector
        options={sacOptions}
        label="Sub Asset Class"
        selected={sacSelection}
        onSelect={handleSacChange}
        onAddManual={handleAddManualSac}
      />

      <EzyOptionSelector
        options={ownerOptions}
        label="Owner"
        selected={ownerSelection}
        onSelect={handleOwnerChange}
        onAddManual={handleAddManualOwner}
      />

      <EzyOptionSelector
        options={applicationOptions}
        label="Application"
        selected={applicationSelection}
        onSelect={handleApplicationChange}
        onAddManual={handleAddManualApplication}
      />

      <button onClick={resetForm}>Reset Form</button>

      {/* Display selected values */}
      <div>
        <h3>Selected Values:</h3>
        <p>AC: {acSelection}</p>
        <p>SAC: {sacSelection}</p>
        <p>Owner: {ownerSelection}</p>
        <p>Application: {applicationSelection}</p>
      </div>
    </div>
  );
};

export default NewIssue;
