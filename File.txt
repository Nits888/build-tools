#!/bin/bash

# Path to the JSON configuration file
CONFIG_FILE="config.json"

# Function to get values from the JSON file
call_function() {
    local category=$1
    local key=$2

    # Using awk to parse the JSON-like structure with debugging
    awk -v cat="$category" -v k="$key" '
    BEGIN { foundCat = 0; }
    {
        # Remove leading and trailing spaces for easier matching
        gsub(/^[ \t]+|[ \t]+$/, "")

        # Print the current line for debugging
        print "Processing line:", $0 > "/dev/stderr"

        # Match category
        if ($0 ~ "\"" cat "\"[ \t]*:[ \t]*\\{") {
            print "Found category:", cat > "/dev/stderr"
            foundCat = 1
            next
        }

        # If category is found and we match the key, print the value
        if (foundCat && $0 ~ "\"" k "\"[ \t]*:") {
            # Extract the value part and clean it
            match($0, "\"" k "\"[ \t]*:[ \t]*\"?([^\",}]+)\"?", arr)
            value = arr[1]
            print "Found key:", k, "with value:", value > "/dev/stderr"
            print value
            exit
        }

        # If we find another category or the end of the current category, stop looking
        if (foundCat && $0 ~ "\\}") {
            print "End of category:", cat > "/dev/stderr"
            foundCat = 0
        }
    }
    ' "$CONFIG_FILE"
}

# Example usage:
# call_function hosts Dev
# call_function Ports Node
# call_function fqdn Dev

# To test the function, uncomment the lines below:
# echo $(call_function hosts Dev)
# echo $(call_function Ports Node)
# echo $(call_function fqdn Dev)
