#!/bin/bash

# Check if JSON file is provided as argument
if [ -z "$1" ]; then
    echo "Usage: $0 <json_file>"
    exit 1
fi

# Check if the JSON file exists
if [ ! -f "$1" ]; then
    echo "File not found: $1"
    exit 1
fi

# Read the JSON file and loop through each entry
while IFS=':' read -r file target || [[ -n "$file" ]]; do
    # Remove leading and trailing whitespace
    file=$(echo "$file" | sed 's/^[ \t]*//;s/[ \t]*$//')
    target=$(echo "$target" | sed 's/^[ \t]*//;s/[ \t]*$//')

    # Check if the file exists in the source directory
    if [ ! -f "$file" ]; then
        echo "File not found: $file"
    else
        # Copy the file to the target directory
        cp "$file" "$target/"
        echo "Copied $file to $target/"
    fi
done < "$1"

â‰ˆ===///=/=

#!/bin/bash

# Function to replace placeholders in a file with environment variables
replace_placeholders() {
    if [ -z "$1" ]; then
        echo "Usage: replace_placeholders <file_path>"
        return 1
    fi

    if [ ! -f "$1" ]; then
        echo "File not found: $1"
        return 1
    fi

    content=$(<"$1")

    for var in $(env); do
        key=$(echo "$var" | cut -d'=' -f1)
        value=$(echo "$var" | cut -d'=' -f2)
        content=${content//\{\{$key\}\}/$value}
    done

    echo "$content" > "$1"
    echo "Placeholders replaced in $1"
}

# Function to perform some other common task
some_other_task() {
    echo "This is another common task"
}
