import os
import json

# List of modified files (replace this with your actual list)
modified_files = [
    "Inventory/Env/server.json",
    "software/software1/env1/server.json",
    "software/software2/env2/server.json"
]

def trigger_job_for_new_server(server_file):
    # Your code to trigger a job for a new server
    print(f"Triggering job for new server: {server_file}")

def trigger_job_for_updated_server(server_file):
    # Your code to trigger a job for an updated server
    print(f"Triggering job for updated server: {server_file}")

def trigger_job_for_new_software(software_file):
    # Your code to trigger a job for new software
    print(f"Triggering job for new software: {software_file}")

def process_modified_files(modified_files):
    for file_path in modified_files:
        # Split the file path to get the components
        file_components = file_path.split(os.sep)

        if len(file_components) >= 3:
            inventory_type = file_components[0]
            if inventory_type == "Inventory":
                # Check if it's an inventory file
                env_name = file_components[1]
                if "server.json" in file_components[-1]:
                    # Check if it's a server.json file in the inventory
                    if os.path.exists(file_path):
                        with open(file_path, "r") as f:
                            server_data = json.load(f)
                            if "hostname" in server_data:
                                # Assuming the presence of "hostname" in server.json
                                # Trigger job for new server if hostname is not present in data
                                if "hostname" not in server_data:
                                    trigger_job_for_new_server(file_path)
                                else:
                                    # Trigger job for updated server if needed
                                    trigger_job_for_updated_server(file_path)
                    else:
                        print(f"File not found: {file_path}")
            elif inventory_type == "software":
                # Check if it's a software inventory file
                if len(file_components) >= 4:
                    software_name = file_components[1]
                    env_name = file_components[2]
                    if "server.json" in file_components[-1]:
                        # Check if it's a server.json file in the software inventory
                        if os.path.exists(file_path):
                            with open(file_path, "r") as f:
                                server_data = json.load(f)
                                if "hostname" in server_data:
                                    # Assuming the presence of "hostname" in server.json
                                    # Trigger job for new software if hostname is not present in data
                                    if "hostname" not in server_data:
                                        trigger_job_for_new_software(file_path)
                    else:
                        print(f"File not found: {file_path}")
            else:
                print(f"Invalid inventory type: {inventory_type}")
        else:
            print(f"Invalid file path: {file_path}")

# Process the list of modified files
process_modified_files(modified_files)
